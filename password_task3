import random
import tkinter as tk
from tkinter import messagebox
 
class PasswordGeneratorApp:
    def __init__(x, root): 
        x.root = root
        x.root.title("Random Password Generator")
 
        x.label_length = tk.Label(root, text="Enter the desired length of the password:")
        x.label_length.pack()

        x.entry_length = tk.Entry(root)
        x.entry_length.pack()

        x.label_strength = tk.Label(root, text="Select the strength of the password:")
        x.label_strength.pack()

        x.strength_var = tk.StringVar()
        x.strength_var.set("Weak")

        x.radio_weak = tk.Radiobutton(root, text="Weak", variable=x.strength_var, value="Weak")
        x.radio_weak.pack()

        x.radio_medium = tk.Radiobutton(root, text="Medium", variable=x.strength_var, value="Medium")
        x.radio_medium.pack()

        x.radio_strong = tk.Radiobutton(root, text="Strong", variable=x.strength_var, value="Strong")
        x.radio_strong.pack()

        x.entry_password = tk.Entry(root)
        x.entry_password.pack()

        x.button_generate = tk.Button(root, text="Generate Password", command=x.generate_password)
        x.button_generate.pack()

    def generate_weak_password(x, length):
        ch = "abcdefghijklmnopqrstuvwxyz"
        password = ''.join(random.choice(ch) for _ in range(length))
        return password

    def generate_medium_password(x, length):
        ch = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789"
        password = ''.join(random.choice(ch) for _ in range(length))
        return password

    def generate_strong_password(x, length):
        ch = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()"
        password = ''.join(random.choice(ch) for _ in range(length))
        return password

    def generate_password(x):
        length = int(x.entry_length.get())
        strength = x.strength_var.get()

        if strength == "Weak":
            password = x.generate_weak_password(length)
        elif strength == "Medium":
            password = x.generate_medium_password(length)
        elif strength == "Strong":
            password = x.generate_strong_password(length)

        x.entry_password.delete(0, tk.END)
        x.entry_password.insert(0, password)

def main():
    root = tk.Tk()
    app = PasswordGeneratorApp(root)
    root.mainloop()

if __name__ == "__main__":
    main()
